openapi: 3.0.3
info:
  title: Magnets e-Commerce API
  description: API for managing products, orders, and user accounts for the Magnets e-Commerce platform.
  version: 1.0.0
servers:
  - url: http://localhost:4000
    description: Development server
  - url: https://api.igitest.pl
    description: Production server
tags:
  - name: Products
    description: Endpoints related to product management, including creating, updating, and deleting products.
  - name: Product Categories
    description: Endpoints related to managing product categories, such as adding, retrieving, and updating them.
  - name: Prices and Sizes
    description: Endpoints related to managing product prices and sizes. Each sizes have own price
  - name: Basket
    description: Endpoints related to basket management, including create, update, and remove basket.

paths:
  # ------------------------- Products requests ---------------
  /products:
    get:
      tags:
        - Products
      summary: Get a list of products
      responses:
        '200':
          description: A JSON array of product objects
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Product'
              example:
                - name: 'Custom Magnet'
                  description: 'A customizable fridge magnet.'
                  categoryId: '1234'
                  imgNames:
                    [
                      'magnet12345.png',
                      'magnet23456.png',
                      'magnet22256.png',
                      'magnet11116.png',
                    ]
                  uploadedImage: true
                  createDate: '2023-01-01T10:00:00Z'
                  editDate: '2023-01-02T15:00:00Z'
                  isRemoved: false
                  pricesAndSizesIds: ['1234', 'abc123']
                - name: 'Custom Magnet123'
                  description: 'A customizable fridge magnet.'
                  categoryId: '12342'
                  imgNames:
                    [
                      'magnet12345.png',
                      'magnet23456.png',
                      'magnet22256.png',
                      'magnet11116.png',
                    ]
                  uploadedImage: true
                  createDate: '2023-01-01T10:00:00Z'
                  editDate: '2023-01-02T15:00:00Z'
                  isRemoved: false
                  pricesAndSizesIds: ['1234', 'abc123']
    post:
      tags:
        - Products
      summary: Create a new product
      requestBody:
        description: Product object to be added
        required: true
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/ProductUpdateData'
                - type: object
                  required:
                    - name
                    - description
                    - categoryId
                    - imgName
                    - isUserImageRequired
                    - isRemoved
                    - pricesAndSizesIds
            example:
              name: 'Custom Magnet'
              description: 'A customizable fridge magnet.'
              categoryId: '1234'
              imgNames:
                [
                  'magnet12345.png',
                  'magnet23456.png',
                  'magnet22256.png',
                  'magnet11116.png',
                ]
              uploadedImage: true
              createDate: '2023-01-01T10:00:00Z'
              editDate: '2023-01-02T15:00:00Z'
              isRemoved: false
              pricesAndSizesIds: ['1234', 'abc123']
      responses:
        '201':
          description: Product created successfully

  /products/{id}:
    get:
      tags:
        - Products
      summary: Get a product by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: The product ID
      responses:
        '200':
          description: A product object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
        '404':
          description: Product not found
    put:
      tags:
        - Products
      summary: Update a product
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: The product ID
      requestBody:
        description: Product object to be updated.
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Product'
      responses:
        '200':
          description: Product updated successfully
        '404':
          description: Product not found
    delete:
      tags:
        - Products
      summary: Delete a product
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: The product ID
      responses:
        '204':
          description: Product deleted successfully
        '404':
          description: Product not found
  # ------------------------- Product Categories requests ---------------
  /product-categories:
    get:
      tags:
        - Product Categories
      summary: Get a list of product categories
      responses:
        '200':
          description: A JSON array of product category objects
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProductCategory'
    post:
      tags:
        - Product Categories
      summary: Create a new product category
      requestBody:
        description: Product category object to be added
        required: true
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/ProductCategory'
                - type: object
                  required:
                    - categoryName
                    - description
            example:
              categoryName: 'custom'
              description: 'Updated category description'
      responses:
        '201':
          description: Product category created successfully

  /product-categories/{id}:
    put:
      tags:
        - Product Categories
      summary: Update a product category
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: The product category ID
      requestBody:
        description: Product category object to be updated.
        required: true
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/ProductCategory'
                - type: object
                  required:
                    - categoryName
                    - description
            example:
              categoryName: 'custom'
              description: 'Updated category description'
      responses:
        '200':
          description: Product category updated successfully
        '404':
          description: Product category not found
    delete:
      tags:
        - Product Categories
      summary: Delete a product category
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: The product category ID
      responses:
        '204':
          description: Product category deleted successfully
        '404':
          description: Product category not found
  # ------------------------- PriceAndSizes requests ---------------
  /prices-sizes:
    get:
      tags:
        - Prices and Sizes
      summary: Get a list of Prices and sizes objects
      responses:
        '200':
          description: A JSON array of product category objects
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PriceAndSizes'
    post:
      tags:
        - Prices and Sizes
      summary: Add new PriceAndSizes data
      requestBody:
        description: PriceAndSizes data was added
        required: true
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/PriceAndSizes'
                - type: object
                  required:
                    - size
                    - price
            example:
              size: '6,8 x 6,8 cm'
              price: 10.99
      responses:
        '201':
          description: Product category created successfully

  /prices-sizes/{id}:
    put:
      tags:
        - Prices and Sizes
      summary: Update a price and sizes object
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: The product category ID
      requestBody:
        description: Product category object to be updated.
        required: true
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/PriceAndSizes'
                - type: object
                  required:
                    - size
                    - price
            example:
              size: '6,8 x 6,8 cm'
              price: 10.99
      responses:
        '200':
          description: Product category updated successfully
        '404':
          description: Product category not found
    delete:
      tags:
        - Prices and Sizes
      summary: Delete a prices and sizes data
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: The product category ID
      responses:
        '204':
          description: Product category deleted successfully
        '404':
          description: Product category not found

  /basket:
    post:
      tags:
        - Basket
      summary: Create a new basket
      description: Creates a new basket with the provided data.
      operationId: createBasket
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BasketUpdateData'
      responses:
        '201':
          description: Basket successfully created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Basket'
        '400':
          description: Invalid input data
        '500':
          description: Internal server error

  /basket/{id}:
    get:
      tags:
        - Basket
      summary: Get user basket
      description: Get user basket by userId
      operationId: getBasket
      parameters:
        - name: id
          in: path
          required: true
          description: The unique identifier of user
          schema:
            type: string
      responses:
        '204':
          description: Basket successfully deleted
        '404':
          description: Basket not found
        '500':
          description: Internal server error

    put:
      tags:
        - Basket
      summary: Update an existing basket
      description: Updates an existing basket with the provided data.
      operationId: updateBasket
      parameters:
        - name: id
          in: path
          required: true
          description: The unique identifier of the basket to update.
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BasketUpdateData'
      responses:
        '200':
          description: Basket successfully updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Basket'
        '400':
          description: Invalid input data or missing parameters
        '404':
          description: Basket not found
        '500':
          description: Internal server error

    delete:
      tags:
        - Basket
      summary: Remove a basket
      description: Removes an existing basket by its identifier.
      operationId: deleteBasket
      parameters:
        - name: id
          in: path
          required: true
          description: The unique identifier of the basket to delete.
          schema:
            type: string
      responses:
        '204':
          description: Basket successfully deleted
        '404':
          description: Basket not found
        '500':
          description: Internal server error
components:
  schemas:
    Product:
      type: object
      description: Data about product
      properties:
        _id:
          type: string
          description: The unique identifier for a product.
        name:
          type: string
          description: The name of the product.
        description:
          type: string
          description: A detailed description of the product.
        category:
          $ref: '#/components/schemas/ProductCategory'
        imgNames:
          type: array
          description: The names of the image files associated with the product.
          items:
            type: string
          minItems: 1
          maxItems: 4
        isUserImageRequired:
          type: boolean
          description: Flag indicating if the product requires the user to upload their own image.
        createDate:
          type: string
          description: The date and time when the product was created.
        editDate:
          type: string
          description: The date and time when the product was last updated.
        isRemoved:
          type: boolean
          description: Indicates whether the product is available
        pricesAndSizes:
          type: array
          items:
            $ref: '#/components/schemas/PriceAndSizes'
          description: An array of size objects referencing the available dimensions for the product, along with pricing.
      required:
        - _id
        - name
        - description
        - category
        - imgNames
        - isUserImageRequired
        - createDate
        - editDate
        - isRemoved
        - pricesAndSizes
      example:
        _id: '12345'
        name: 'Custom Magnet'
        description: 'A customizable fridge magnet.'
        category: 'custom'
        imgNames: ['magnet12345.png']
        uploadedImage: true
        createDate: '2023-01-01T10:00:00Z'
        editDate: '2023-01-02T15:00:00Z'
        inStock: true
        dimensions:
          - _id: '6.8x6.8'
            desc: '6,8 x 6,8 cm'
            price: 2.9
            category: 'custom'
          - _id: '9.5x6.8'
            desc: '9,5 x 6,8 cm'
            price: 5.0
            category: 'custom'
    ProductUpdateData:
      type: object
      description: Paylod to update product data
      properties:
        name:
          type: string
          description: The name of the product.
        description:
          type: string
          description: A detailed description of the product.
        categoryId:
          type: string
          description: Id of a type
        imgNames:
          type: array
          description: The names of the image files to be displayed in product info.
          items:
            type: string
          minItems: 1
          maxItems: 4
        isUserImageRequired:
          type: boolean
          description: Flag indicating if the product requires the user to upload their own image.
        createDate:
          type: string
          description: The date and time when the product was created.
        editDate:
          type: string
          description: The date and time when the product was last updated.
        isRemoved:
          type: boolean
          description: Indicates whether the product is available
        pricesAndSizesIds:
          type: array
          items:
            type: string
          description: An array of ids to size objects referencing the available dimensions for the product, along with pricing.
      required:
        - name
        - description
        - categoryId
        - imgNames
        - isUserImageRequired
        - createDate
        - editDate
        - isRemoved
        - pricesAndSizesIds
      example:
        name: 'Custom Magnet'
        description: 'A customizable fridge magnet.'
        categoryId: '1234'
        imgNames:
          [
            'magnet12345.png',
            'magnet23456.png',
            'magnet22256.png',
            'magnet11116.png',
          ]
        isUserImageRequired: true
        createDate: '2023-01-01T10:00:00Z'
        editDate: '2023-01-02T15:00:00Z'
        isRemoved: false
        pricesAndSizesIds: ['1234', 'abc123']
    PriceAndSizes:
      type: object
      description: Price information based on product type and dimensions
      properties:
        _id:
          type: string
          description: The unique identifier for the size option.
        size:
          type: string
          description: A textual description of the size dimensions.
        price:
          type: number
          format: float
          description: The price associated with this size.
      required:
        - _id
        - size
        - price
      example:
        - _id: '6.8x6.8'
          size: '6,8 x 6,8 cm'
          price: 2.9
        - _id: '9.5x6.8'
          size: '9,5 x 6,8 cm'
          price: 5.0
        - _id: '9.5x9.5'
          size: '9,5 x 9,5 cm'
          price: 7.2
        - _id: '10x14'
          size: '10 x 14 cm'
          price: 9.1
    ProductCategory:
      type: object
      description: Product category type with description
      properties:
        _id:
          type: string
          description: The unique identifier for a product.
          x-originalName: _id
        categoryName:
          type: string
          description: Categories of the product including custom and pre-designed options.
        description:
          type: string
          description: Category type description that will be displayed
      required:
        - _id
        - categoryName
        - description
      example:
        - _id: dwa-12daw-123
        - categoryName: custom
        - description: User upload own photo
    BasketItem:
      type: object
      description: Object represents user product in basket, with quantity of items and totalPrice
      properties:
        product:
          $ref: '#/components/schemas/Product'
        priceAndSizesArray:
          type: array
          description: User selected sizes with quantity and totalPrice for given product
          items:
            type: object
            properties:
              priceAndSizeItem:
                $ref: '#/components/schemas/PriceAndSizes'
              quantity:
                type: number
                description: Number of given product
              totalPrice:
                type: number
                description: Total price of the selected size
            required:
              - priceAndSizeItem
              - quantity
              - totalPrice
        totalPrice:
          type: number
          description: Total price for product
      required:
        - product
        - priceAndSizesArray
        - totalPrice
    BasketItemUpdateData:
      type: object
      description: Object represents user product in basket, with quantity of items and totalPrice
      properties:
        productId:
          type: string
          description: Product identifier
        priceAndSizesArray:
          type: array
          description: User selected sizes with quantity and totalPrice for given product
          items:
            type: object
            properties:
              priceAndSizeItemId:
                type: string
                description: Price and size identifier
              quantity:
                type: number
                description: Number of given product
              totalPrice:
                type: number
                description: Total price of the selected size
            required:
              - priceAndSizeItemId
              - quantity
              - totalPrice
        totalPrice:
          type: number
          description: Total price for product
      required:
        - productId,
        - priceAndSizesArray
        - totalPrice
    Basket:
      type: object
      description: User basket data, with selected products
      properties:
        _id:
          type: string
          description: The unique identifier for a product.
          x-originalName: _id
        userId:
          type: string
          description: User identifier
        basket:
          type: array
          description: User products
          items:
            $ref: '#/components/schemas/BasketItem'
        totalQuantity:
          type: number
          description: Total numbers of magnets that will be bought
        totalPrice:
          type: number
          description: Total price of the purchase
      required:
        - _id
        - userId
        - basket
        - totalQuantity
        - totalPrice
    BasketUpdateData:
      type: object
      description: User basket data, with selected products
      properties:
        userId:
          type: string
          description: User identifier
        basket:
          type: array
          description: User products
          items:
            $ref: '#/components/schemas/BasketItemUpdateData'
        totalQuantity:
          type: number
          description: Total numbers of magnets that will be bought
        totalPrice:
          type: number
          description: Total price of the purchase
      required:
        - userId
        - basket
        - totalQuantity
        - totalPrice
